
** Conflict (shift/reduce) in state 57.
** Tokens involved: TIMES PLUS NE MINUS LT LE LCOCH GT GE EQ DIV
** The following explanations concentrate on token TIMES.
** This state is reached from program after reading:

PROG BEGIN ID LPAR e biop e

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
PROG bloc DOT EOF 
     BEGIN instrs END 
           instr 
           ID LPAR exps RPAR SEP 
                   e 
                   (?)

** In state 57, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

e biop e 
       e biop e 
         . TIMES 

** In state 57, looking ahead at TIMES, reducing production
** e -> e biop e
** is permitted because of the following sub-derivation:

e biop e // lookahead token appears because biop can begin with TIMES
e biop e . 

** Conflict (shift/reduce) in state 42.
** Tokens involved: TIMES PLUS NE MINUS LT LE LCOCH GT GE EQ DIV
** The following explanations concentrate on token TIMES.
** This state is reached from program after reading:

PROG BEGIN ID LPAR singop e

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
PROG bloc DOT EOF 
     BEGIN instrs END 
           instr 
           ID LPAR exps RPAR SEP 
                   e 
                   (?)

** In state 42, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

singop e 
       e biop e 
         . TIMES 

** In state 42, looking ahead at TIMES, reducing production
** e -> singop e
** is permitted because of the following sub-derivation:

e biop e // lookahead token appears because biop can begin with TIMES
singop e . 

** Conflict (shift/reduce) in state 13.
** Token involved: SEP
** This state is reached from program after reading:

PROG VAR ID COLON t SEP ID COLON t

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
PROG defps bloc DOT EOF 
     defprog 
     defv 
     VAR vars 
         (?)

** In state 13, looking ahead at SEP, reducing production
** idtype -> ID COLON t
** is permitted because of the following sub-derivation:

var SEP // lookahead token appears
ID COLON t SEP idtype // lookahead token is inherited
               ID COLON t . 

** In state 13, looking ahead at SEP, shifting is permitted
** because of the following sub-derivation:

var SEP 
ID COLON t SEP idtype 
               ID COLON t . SEP idtype 
